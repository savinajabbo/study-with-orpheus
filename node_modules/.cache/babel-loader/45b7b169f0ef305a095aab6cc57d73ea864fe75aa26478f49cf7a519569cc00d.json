{"ast":null,"code":"var _jsxFileName = \"/Users/savinajabbo/study-with-orpheus/src/components/PomodoroTimer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './pomodorotimer.css';\nimport Button from './Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PomodoroTimer() {\n  _s();\n  const [currentTime, setCurrentTime] = useState(getCurrentTime());\n  const [isWorking, setIsWorking] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(25 * 60);\n  const [isPaused, setIsPaused] = useState(true);\n  const [isInitialPlay, setIsInitialPlay] = useState(true);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCurrentTime(getCurrentTime());\n      if (!isPaused && timeLeft > 0) {\n        setTimeLeft(prevTimeLeft => prevTimeLeft - 1);\n      }\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, [isPaused, timeLeft]);\n  useEffect(() => {\n    if (timeLeft === 0) {\n      setIsWorking(!isWorking);\n      if (isWorking) {\n        setTimeLeft(shortBreakTime * 60);\n      } else {\n        setTimeLeft(workTime * 60);\n      }\n    }\n  }, [timeLeft]);\n  function getCurrentTime() {\n    const now = new Date();\n    const options = {\n      hour: 'numeric',\n      minute: 'numeric'\n    };\n    return now.toLocaleTimeString([], options);\n  }\n  function startTimer() {\n    setIsPaused(false);\n    setTimeLeft(workTime * 60);\n    setIsWorking(true);\n    setIsInitialPlay(false);\n  }\n  function startShortBreak() {\n    if (!isInitialPlay) {\n      setIsPaused(false);\n      setIsWorking(false);\n      setTimeLeft(shortBreakTime * 60);\n    }\n  }\n  function startLongBreak() {\n    if (!isInitialPlay) {\n      setIsPaused(false);\n      setIsWorking(false);\n      setTimeLeft(longBreakTime * 60);\n    }\n  }\n  function togglePause() {\n    setIsPaused(!isPaused);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pomodoro-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: startTimer,\n        children: \"focus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: startShortBreak,\n        children: \"short break\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: startLongBreak,\n        children: \"long break\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [Math.floor(timeLeft / 60), \":\", (timeLeft % 60).toString().padStart(2, '0')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-pause\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: togglePause,\n        children: isPaused ? \"play\" : \"pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(PomodoroTimer, \"Ggv3ymYzE+jU1rySKVop4BfJu5c=\");\n_c = PomodoroTimer;\nexport default PomodoroTimer;\nvar _c;\n$RefreshReg$(_c, \"PomodoroTimer\");","map":{"version":3,"names":["React","useState","useEffect","Button","jsxDEV","_jsxDEV","PomodoroTimer","_s","currentTime","setCurrentTime","getCurrentTime","isWorking","setIsWorking","timeLeft","setTimeLeft","isPaused","setIsPaused","isInitialPlay","setIsInitialPlay","intervalId","setInterval","prevTimeLeft","clearInterval","shortBreakTime","workTime","now","Date","options","hour","minute","toLocaleTimeString","startTimer","startShortBreak","startLongBreak","longBreakTime","togglePause","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Math","floor","toString","padStart","_c","$RefreshReg$"],"sources":["/Users/savinajabbo/study-with-orpheus/src/components/PomodoroTimer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './pomodorotimer.css';\nimport Button from './Button';\n\nfunction PomodoroTimer() {\n  const [currentTime, setCurrentTime] = useState(getCurrentTime());\n  const [isWorking, setIsWorking] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(25 * 60); \n  const [isPaused, setIsPaused] = useState(true);\n  const [isInitialPlay, setIsInitialPlay] = useState(true);\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCurrentTime(getCurrentTime());\n      if (!isPaused && timeLeft > 0) {\n        setTimeLeft(prevTimeLeft => prevTimeLeft - 1);\n      }\n    }, 1000);\n\n    return () => clearInterval(intervalId);\n  }, [isPaused, timeLeft]);\n\n  useEffect(() => {\n    if (timeLeft === 0) {\n      setIsWorking(!isWorking);\n      if (isWorking) {\n        setTimeLeft(shortBreakTime * 60);\n      } else {\n        setTimeLeft(workTime * 60);\n      }\n    }\n  }, [timeLeft]);\n\n  function getCurrentTime() {\n    const now = new Date();\n    const options = { hour: 'numeric', minute: 'numeric' };\n    return now.toLocaleTimeString([], options);\n  }\n\n  function startTimer() {\n    setIsPaused(false);\n    setTimeLeft(workTime * 60);\n    setIsWorking(true);\n    setIsInitialPlay(false);\n  }\n\n  function startShortBreak() {\n    if (!isInitialPlay) {\n      setIsPaused(false);\n      setIsWorking(false);\n      setTimeLeft(shortBreakTime * 60);\n    }\n  }\n\n  function startLongBreak() {\n    if (!isInitialPlay) {\n      setIsPaused(false);\n      setIsWorking(false);\n      setTimeLeft(longBreakTime * 60);\n    }\n  }\n\n  function togglePause() {\n    setIsPaused(!isPaused);\n  }\n\n  return (\n    <div className='pomodoro-container'>\n      <div className='controls'>\n        <Button onClick={startTimer}>focus</Button>\n        <Button onClick={startShortBreak}>short break</Button>\n        <Button onClick={startLongBreak}>long break</Button>\n      </div>\n      <div className='timer'>\n        <h1>{Math.floor(timeLeft / 60)}:{(timeLeft % 60).toString().padStart(2, '0')}</h1>\n      </div>\n      <div className='play-pause'>\n        <Button onClick={togglePause}>{isPaused ? \"play\" : \"pause\"}</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default PomodoroTimer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}