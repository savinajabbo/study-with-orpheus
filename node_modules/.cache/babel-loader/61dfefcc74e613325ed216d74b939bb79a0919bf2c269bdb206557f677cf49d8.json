{"ast":null,"code":"var _jsxFileName = \"/Users/savinajabbo/study-with-orpheus/src/components/PomodoroTimer.js\",\n  _s = $RefreshSig$();\n// PomodoroTimer.js\nimport React, { useState, useEffect } from 'react';\nimport './pomodorotimer.css';\nimport Button from './Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PomodoroTimer() {\n  _s();\n  const [currentTime, setCurrentTime] = useState(getCurrentTime());\n  const [isWorking, setIsWorking] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(25 * 60); // 25 minutes in seconds\n  const [showSettings, setShowSettings] = useState(false);\n  const [workTime, setWorkTime] = useState(25);\n  const [shortBreakTime, setShortBreakTime] = useState(5);\n  const [longBreakTime, setLongBreakTime] = useState(15);\n  const [isPaused, setIsPaused] = useState(true); // Initially paused\n  const [isInitialPlay, setIsInitialPlay] = useState(true); // Flag to track initial play\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCurrentTime(getCurrentTime());\n      if (!isPaused && timeLeft > 0) {\n        setTimeLeft(prevTimeLeft => prevTimeLeft - 1);\n      }\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, [isPaused, timeLeft]);\n  useEffect(() => {\n    if (timeLeft === 0) {\n      setIsWorking(!isWorking);\n      if (isWorking) {\n        setTimeLeft(shortBreakTime * 60);\n      } else {\n        setTimeLeft(workTime * 60);\n      }\n    }\n  }, [timeLeft]);\n  function getCurrentTime() {\n    const now = new Date();\n    const options = {\n      hour: 'numeric',\n      minute: 'numeric'\n    };\n    return now.toLocaleTimeString([], options);\n  }\n  function startTimer() {\n    setIsPaused(false);\n    setTimeLeft(workTime * 60);\n    setIsWorking(true);\n    setIsInitialPlay(false);\n  }\n  function startShortBreak() {\n    if (!isInitialPlay) {\n      setIsPaused(false);\n      setIsWorking(false);\n      setTimeLeft(shortBreakTime * 60);\n    }\n  }\n  function startLongBreak() {\n    if (!isInitialPlay) {\n      setIsPaused(false);\n      setIsWorking(false);\n      setTimeLeft(longBreakTime * 60);\n    }\n  }\n  function toggleSettings() {\n    setShowSettings(!showSettings);\n  }\n  function togglePause() {\n    setIsPaused(!isPaused);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pomodoro-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startTimer,\n        children: \"Work\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startShortBreak,\n        children: \"Short Break\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startLongBreak,\n        children: \"Long Break\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleSettings,\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [Math.floor(timeLeft / 60), \":\", (timeLeft % 60).toString().padStart(2, '0')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-pause\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: togglePause,\n        children: isPaused ? \"Play\" : \"Pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), showSettings && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Work Time (minutes):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: workTime,\n        onChange: e => setWorkTime(parseInt(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Short Break Time (minutes):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: shortBreakTime,\n        onChange: e => setShortBreakTime(parseInt(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Long Break Time (minutes):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: longBreakTime,\n        onChange: e => setLongBreakTime(parseInt(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(PomodoroTimer, \"/iKOjiINhN/vtkCZQKMjWGhYq48=\");\n_c = PomodoroTimer;\nexport default PomodoroTimer;\nvar _c;\n$RefreshReg$(_c, \"PomodoroTimer\");","map":{"version":3,"names":["React","useState","useEffect","Button","jsxDEV","_jsxDEV","PomodoroTimer","_s","currentTime","setCurrentTime","getCurrentTime","isWorking","setIsWorking","timeLeft","setTimeLeft","showSettings","setShowSettings","workTime","setWorkTime","shortBreakTime","setShortBreakTime","longBreakTime","setLongBreakTime","isPaused","setIsPaused","isInitialPlay","setIsInitialPlay","intervalId","setInterval","prevTimeLeft","clearInterval","now","Date","options","hour","minute","toLocaleTimeString","startTimer","startShortBreak","startLongBreak","toggleSettings","togglePause","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Math","floor","toString","padStart","type","value","onChange","e","parseInt","target","_c","$RefreshReg$"],"sources":["/Users/savinajabbo/study-with-orpheus/src/components/PomodoroTimer.js"],"sourcesContent":["// PomodoroTimer.js\nimport React, { useState, useEffect } from 'react';\nimport './pomodorotimer.css';\nimport Button from './Button';\n\nfunction PomodoroTimer() {\n  const [currentTime, setCurrentTime] = useState(getCurrentTime());\n  const [isWorking, setIsWorking] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(25 * 60); // 25 minutes in seconds\n  const [showSettings, setShowSettings] = useState(false);\n  const [workTime, setWorkTime] = useState(25);\n  const [shortBreakTime, setShortBreakTime] = useState(5);\n  const [longBreakTime, setLongBreakTime] = useState(15);\n  const [isPaused, setIsPaused] = useState(true); // Initially paused\n  const [isInitialPlay, setIsInitialPlay] = useState(true); // Flag to track initial play\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCurrentTime(getCurrentTime());\n      if (!isPaused && timeLeft > 0) {\n        setTimeLeft(prevTimeLeft => prevTimeLeft - 1);\n      }\n    }, 1000);\n\n    return () => clearInterval(intervalId);\n  }, [isPaused, timeLeft]);\n\n  useEffect(() => {\n    if (timeLeft === 0) {\n      setIsWorking(!isWorking);\n      if (isWorking) {\n        setTimeLeft(shortBreakTime * 60);\n      } else {\n        setTimeLeft(workTime * 60);\n      }\n    }\n  }, [timeLeft]);\n\n  function getCurrentTime() {\n    const now = new Date();\n    const options = { hour: 'numeric', minute: 'numeric' };\n    return now.toLocaleTimeString([], options);\n  }\n\n  function startTimer() {\n    setIsPaused(false);\n    setTimeLeft(workTime * 60);\n    setIsWorking(true);\n    setIsInitialPlay(false);\n  }\n\n  function startShortBreak() {\n    if (!isInitialPlay) {\n      setIsPaused(false);\n      setIsWorking(false);\n      setTimeLeft(shortBreakTime * 60);\n    }\n  }\n\n  function startLongBreak() {\n    if (!isInitialPlay) {\n      setIsPaused(false);\n      setIsWorking(false);\n      setTimeLeft(longBreakTime * 60);\n    }\n  }\n\n  function toggleSettings() {\n    setShowSettings(!showSettings);\n  }\n\n  function togglePause() {\n    setIsPaused(!isPaused);\n  }\n\n  return (\n    <div className='pomodoro-container'>\n      <div className='controls'>\n        <button onClick={startTimer}>Work</button>\n        <button onClick={startShortBreak}>Short Break</button>\n        <button onClick={startLongBreak}>Long Break</button>\n        <button onClick={toggleSettings}>Settings</button>\n      </div>\n      <div className='timer'>\n        <h1>{Math.floor(timeLeft / 60)}:{(timeLeft % 60).toString().padStart(2, '0')}</h1>\n      </div>\n      <div className='play-pause'>\n        <button onClick={togglePause}>{isPaused ? \"Play\" : \"Pause\"}</button>\n      </div>\n      {showSettings && (\n        <div className='settings'>\n          <h2>Settings</h2>\n          <label>Work Time (minutes):</label>\n          <input type='number' value={workTime} onChange={(e) => setWorkTime(parseInt(e.target.value))} />\n          <label>Short Break Time (minutes):</label>\n          <input type='number' value={shortBreakTime} onChange={(e) => setShortBreakTime(parseInt(e.target.value))} />\n          <label>Long Break Time (minutes):</label>\n          <input type='number' value={longBreakTime} onChange={(e) => setLongBreakTime(parseInt(e.target.value))} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default PomodoroTimer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}